name: BlackLinter

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black
    - name: Set environment variables
      run: |
        echo "commit_id=${GITHUB_SHA}" >> $GITHUB_ENV
        echo "branch=${GITHUB_REF_NAME}" >> $GITHUB_ENV
        echo "repository=${GITHUB_REPOSITORY}" >> $GITHUB_ENV

    - name: Analysing the code with black
      run: |
        echo "startDate=$(date +%s)" >> $GITHUB_ENV
        echo "black_version=$(black --version | head -n 1 | awk '{print $2}')"  >> $GITHUB_ENV
        if $(black --check .); then
            result=true
        else
            result=false
        fi
        echo "endDate=$(date +%s)" >> $GITHUB_ENV
        echo "result=$result" >> $GITHUB_ENV
        
    - name: Send CI KPI
      run: |
        echo "{
          \"startDate\": $startDate,
          \"endDate\": $endDate,
          \"project\": \"$repository\",
          \"commitId\": \"$commit_id\",
          \"branch\": \"$branch\",
          \"testName\": \"black lint\",
          \"determinist\": true,
          \"testType\": \"linter\",
          \"success\": $result,
          \"result\": $result,
          \"context\": {
            \"toolUsed\": \"black\",
            \"toolVersion\": \"$black_version\",
            \"environment\": \"Github Actions\"
          }
        }" > data.json
        cat data.json
        curl -X 'POST' \
          'https://observability-ci-workflows.onrender.com/ci_kpi' \
          -H 'accept: application/json' \
          -H 'Content-Type: application/json' \
          -d @data.json
          
    - name: Evaluate validator
      run: |
        if [ "$result" == "false" ]; then
            exit 1
        fi
